//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace proj2018_2019.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Film", Namespace="http://schemas.datacontract.org/2004/07/PROJETBAYE2018.Modeltest")]
    [System.SerializableAttribute()]
    public partial class Film : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Film_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LenghtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Original_Language_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Release_yearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Rental_durationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Rental_rateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Replacement_costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Special_featuresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Film_ID {
            get {
                return this.Film_IDField;
            }
            set {
                if ((this.Film_IDField.Equals(value) != true)) {
                    this.Film_IDField = value;
                    this.RaisePropertyChanged("Film_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Lenght {
            get {
                return this.LenghtField;
            }
            set {
                if ((this.LenghtField.Equals(value) != true)) {
                    this.LenghtField = value;
                    this.RaisePropertyChanged("Lenght");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Original_Language_ID {
            get {
                return this.Original_Language_IDField;
            }
            set {
                if ((this.Original_Language_IDField.Equals(value) != true)) {
                    this.Original_Language_IDField = value;
                    this.RaisePropertyChanged("Original_Language_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Release_year {
            get {
                return this.Release_yearField;
            }
            set {
                if ((object.ReferenceEquals(this.Release_yearField, value) != true)) {
                    this.Release_yearField = value;
                    this.RaisePropertyChanged("Release_year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rental_duration {
            get {
                return this.Rental_durationField;
            }
            set {
                if ((this.Rental_durationField.Equals(value) != true)) {
                    this.Rental_durationField = value;
                    this.RaisePropertyChanged("Rental_duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Rental_rate {
            get {
                return this.Rental_rateField;
            }
            set {
                if ((this.Rental_rateField.Equals(value) != true)) {
                    this.Rental_rateField = value;
                    this.RaisePropertyChanged("Rental_rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Replacement_cost {
            get {
                return this.Replacement_costField;
            }
            set {
                if ((this.Replacement_costField.Equals(value) != true)) {
                    this.Replacement_costField = value;
                    this.RaisePropertyChanged("Replacement_cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Special_features {
            get {
                return this.Special_featuresField;
            }
            set {
                if ((object.ReferenceEquals(this.Special_featuresField, value) != true)) {
                    this.Special_featuresField = value;
                    this.RaisePropertyChanged("Special_features");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Film_Actor", Namespace="http://schemas.datacontract.org/2004/07/PROJETBAYE2018.Modeltest")]
    [System.SerializableAttribute()]
    public partial class Film_Actor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Actor_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Film_ActorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Film_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Actor_ID {
            get {
                return this.Actor_IDField;
            }
            set {
                if ((this.Actor_IDField.Equals(value) != true)) {
                    this.Actor_IDField = value;
                    this.RaisePropertyChanged("Actor_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Film_ActorID {
            get {
                return this.Film_ActorIDField;
            }
            set {
                if ((this.Film_ActorIDField.Equals(value) != true)) {
                    this.Film_ActorIDField = value;
                    this.RaisePropertyChanged("Film_ActorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Film_ID {
            get {
                return this.Film_IDField;
            }
            set {
                if ((this.Film_IDField.Equals(value) != true)) {
                    this.Film_IDField = value;
                    this.RaisePropertyChanged("Film_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Film_Category", Namespace="http://schemas.datacontract.org/2004/07/PROJETBAYE2018.Modeltest")]
    [System.SerializableAttribute()]
    public partial class Film_Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Category_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Film_IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Category_ID {
            get {
                return this.Category_IDField;
            }
            set {
                if ((this.Category_IDField.Equals(value) != true)) {
                    this.Category_IDField = value;
                    this.RaisePropertyChanged("Category_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Film_ID {
            get {
                return this.Film_IDField;
            }
            set {
                if ((this.Film_IDField.Equals(value) != true)) {
                    this.Film_IDField = value;
                    this.RaisePropertyChanged("Film_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/PROJETBAYE2018.Modeltest")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private proj2018_2019.ServiceReference2.Film[] FilmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private proj2018_2019.ServiceReference2.Film[] OFilmsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public proj2018_2019.ServiceReference2.Film[] Films {
            get {
                return this.FilmsField;
            }
            set {
                if ((object.ReferenceEquals(this.FilmsField, value) != true)) {
                    this.FilmsField = value;
                    this.RaisePropertyChanged("Films");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public proj2018_2019.ServiceReference2.Film[] OFilms {
            get {
                return this.OFilmsField;
            }
            set {
                if ((object.ReferenceEquals(this.OFilmsField, value) != true)) {
                    this.OFilmsField = value;
                    this.RaisePropertyChanged("OFilms");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/PROJETBAYE2018.Modeltest")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private proj2018_2019.ServiceReference2.Film_Category[] Film_CategoriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public proj2018_2019.ServiceReference2.Film_Category[] Film_Categories {
            get {
                return this.Film_CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.Film_CategoriesField, value) != true)) {
                    this.Film_CategoriesField = value;
                    this.RaisePropertyChanged("Film_Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Actor", Namespace="http://schemas.datacontract.org/2004/07/PROJETBAYE2018.Modeltest")]
    [System.SerializableAttribute()]
    public partial class Actor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActorIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActorID {
            get {
                return this.ActorIDField;
            }
            set {
                if ((this.ActorIDField.Equals(value) != true)) {
                    this.ActorIDField = value;
                    this.RaisePropertyChanged("ActorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IThiouneService")]
    public interface IThiouneService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Ajouterfilm", ReplyAction="http://tempuri.org/IThiouneService/AjouterfilmResponse")]
        void Ajouterfilm(proj2018_2019.ServiceReference2.Film F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Ajouterfilm", ReplyAction="http://tempuri.org/IThiouneService/AjouterfilmResponse")]
        System.Threading.Tasks.Task AjouterfilmAsync(proj2018_2019.ServiceReference2.Film F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/ajouterfilm_actor", ReplyAction="http://tempuri.org/IThiouneService/ajouterfilm_actorResponse")]
        void ajouterfilm_actor(proj2018_2019.ServiceReference2.Film_Actor fa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/ajouterfilm_actor", ReplyAction="http://tempuri.org/IThiouneService/ajouterfilm_actorResponse")]
        System.Threading.Tasks.Task ajouterfilm_actorAsync(proj2018_2019.ServiceReference2.Film_Actor fa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/ajouterfilm_categories", ReplyAction="http://tempuri.org/IThiouneService/ajouterfilm_categoriesResponse")]
        void ajouterfilm_categories(proj2018_2019.ServiceReference2.Film_Category fc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/ajouterfilm_categories", ReplyAction="http://tempuri.org/IThiouneService/ajouterfilm_categoriesResponse")]
        System.Threading.Tasks.Task ajouterfilm_categoriesAsync(proj2018_2019.ServiceReference2.Film_Category fc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Categorie1", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_Categorie1Response")]
        proj2018_2019.ServiceReference2.Film[] Film_Par_Categorie1(string categori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Categorie1", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_Categorie1Response")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_Categorie1Async(string categori);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Categorie2", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_Categorie2Response")]
        proj2018_2019.ServiceReference2.Film[] Film_Par_Categorie2(string categori1, string categori2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Categorie2", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_Categorie2Response")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_Categorie2Async(string categori1, string categori2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Acteur", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_ActeurResponse")]
        proj2018_2019.ServiceReference2.Film[] Film_Par_Acteur(string act);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Acteur", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_ActeurResponse")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_ActeurAsync(string act);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Langue", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_LangueResponse")]
        proj2018_2019.ServiceReference2.Film[] Film_Par_Langue(string langue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/Film_Par_Langue", ReplyAction="http://tempuri.org/IThiouneService/Film_Par_LangueResponse")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_LangueAsync(string langue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetFilms", ReplyAction="http://tempuri.org/IThiouneService/GetFilmsResponse")]
        proj2018_2019.ServiceReference2.Film[] GetFilms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetFilms", ReplyAction="http://tempuri.org/IThiouneService/GetFilmsResponse")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> GetFilmsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetLang", ReplyAction="http://tempuri.org/IThiouneService/GetLangResponse")]
        proj2018_2019.ServiceReference2.Language[] GetLang();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetLang", ReplyAction="http://tempuri.org/IThiouneService/GetLangResponse")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Language[]> GetLangAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetCat", ReplyAction="http://tempuri.org/IThiouneService/GetCatResponse")]
        proj2018_2019.ServiceReference2.Category[] GetCat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetCat", ReplyAction="http://tempuri.org/IThiouneService/GetCatResponse")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Category[]> GetCatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetActor", ReplyAction="http://tempuri.org/IThiouneService/GetActorResponse")]
        proj2018_2019.ServiceReference2.Actor[] GetActor();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/GetActor", ReplyAction="http://tempuri.org/IThiouneService/GetActorResponse")]
        System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Actor[]> GetActorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/ajouterActor", ReplyAction="http://tempuri.org/IThiouneService/ajouterActorResponse")]
        void ajouterActor(proj2018_2019.ServiceReference2.Actor fa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/ajouterActor", ReplyAction="http://tempuri.org/IThiouneService/ajouterActorResponse")]
        System.Threading.Tasks.Task ajouterActorAsync(proj2018_2019.ServiceReference2.Actor fa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/LastIdFilm", ReplyAction="http://tempuri.org/IThiouneService/LastIdFilmResponse")]
        int LastIdFilm();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/LastIdFilm", ReplyAction="http://tempuri.org/IThiouneService/LastIdFilmResponse")]
        System.Threading.Tasks.Task<int> LastIdFilmAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/AddFilms", ReplyAction="http://tempuri.org/IThiouneService/AddFilmsResponse")]
        void AddFilms(proj2018_2019.ServiceReference2.Film F, proj2018_2019.ServiceReference2.Actor[] Actor, proj2018_2019.ServiceReference2.Category[] Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/AddFilms", ReplyAction="http://tempuri.org/IThiouneService/AddFilmsResponse")]
        System.Threading.Tasks.Task AddFilmsAsync(proj2018_2019.ServiceReference2.Film F, proj2018_2019.ServiceReference2.Actor[] Actor, proj2018_2019.ServiceReference2.Category[] Category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/AddActors", ReplyAction="http://tempuri.org/IThiouneService/AddActorsResponse")]
        void AddActors(proj2018_2019.ServiceReference2.Actor A, proj2018_2019.ServiceReference2.Film[] F);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IThiouneService/AddActors", ReplyAction="http://tempuri.org/IThiouneService/AddActorsResponse")]
        System.Threading.Tasks.Task AddActorsAsync(proj2018_2019.ServiceReference2.Actor A, proj2018_2019.ServiceReference2.Film[] F);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IThiouneServiceChannel : proj2018_2019.ServiceReference2.IThiouneService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ThiouneServiceClient : System.ServiceModel.ClientBase<proj2018_2019.ServiceReference2.IThiouneService>, proj2018_2019.ServiceReference2.IThiouneService {
        
        public ThiouneServiceClient() {
        }
        
        public ThiouneServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ThiouneServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ThiouneServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ThiouneServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Ajouterfilm(proj2018_2019.ServiceReference2.Film F) {
            base.Channel.Ajouterfilm(F);
        }
        
        public System.Threading.Tasks.Task AjouterfilmAsync(proj2018_2019.ServiceReference2.Film F) {
            return base.Channel.AjouterfilmAsync(F);
        }
        
        public void ajouterfilm_actor(proj2018_2019.ServiceReference2.Film_Actor fa) {
            base.Channel.ajouterfilm_actor(fa);
        }
        
        public System.Threading.Tasks.Task ajouterfilm_actorAsync(proj2018_2019.ServiceReference2.Film_Actor fa) {
            return base.Channel.ajouterfilm_actorAsync(fa);
        }
        
        public void ajouterfilm_categories(proj2018_2019.ServiceReference2.Film_Category fc) {
            base.Channel.ajouterfilm_categories(fc);
        }
        
        public System.Threading.Tasks.Task ajouterfilm_categoriesAsync(proj2018_2019.ServiceReference2.Film_Category fc) {
            return base.Channel.ajouterfilm_categoriesAsync(fc);
        }
        
        public proj2018_2019.ServiceReference2.Film[] Film_Par_Categorie1(string categori) {
            return base.Channel.Film_Par_Categorie1(categori);
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_Categorie1Async(string categori) {
            return base.Channel.Film_Par_Categorie1Async(categori);
        }
        
        public proj2018_2019.ServiceReference2.Film[] Film_Par_Categorie2(string categori1, string categori2) {
            return base.Channel.Film_Par_Categorie2(categori1, categori2);
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_Categorie2Async(string categori1, string categori2) {
            return base.Channel.Film_Par_Categorie2Async(categori1, categori2);
        }
        
        public proj2018_2019.ServiceReference2.Film[] Film_Par_Acteur(string act) {
            return base.Channel.Film_Par_Acteur(act);
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_ActeurAsync(string act) {
            return base.Channel.Film_Par_ActeurAsync(act);
        }
        
        public proj2018_2019.ServiceReference2.Film[] Film_Par_Langue(string langue) {
            return base.Channel.Film_Par_Langue(langue);
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> Film_Par_LangueAsync(string langue) {
            return base.Channel.Film_Par_LangueAsync(langue);
        }
        
        public proj2018_2019.ServiceReference2.Film[] GetFilms() {
            return base.Channel.GetFilms();
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Film[]> GetFilmsAsync() {
            return base.Channel.GetFilmsAsync();
        }
        
        public proj2018_2019.ServiceReference2.Language[] GetLang() {
            return base.Channel.GetLang();
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Language[]> GetLangAsync() {
            return base.Channel.GetLangAsync();
        }
        
        public proj2018_2019.ServiceReference2.Category[] GetCat() {
            return base.Channel.GetCat();
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Category[]> GetCatAsync() {
            return base.Channel.GetCatAsync();
        }
        
        public proj2018_2019.ServiceReference2.Actor[] GetActor() {
            return base.Channel.GetActor();
        }
        
        public System.Threading.Tasks.Task<proj2018_2019.ServiceReference2.Actor[]> GetActorAsync() {
            return base.Channel.GetActorAsync();
        }
        
        public void ajouterActor(proj2018_2019.ServiceReference2.Actor fa) {
            base.Channel.ajouterActor(fa);
        }
        
        public System.Threading.Tasks.Task ajouterActorAsync(proj2018_2019.ServiceReference2.Actor fa) {
            return base.Channel.ajouterActorAsync(fa);
        }
        
        public int LastIdFilm() {
            return base.Channel.LastIdFilm();
        }
        
        public System.Threading.Tasks.Task<int> LastIdFilmAsync() {
            return base.Channel.LastIdFilmAsync();
        }
        
        public void AddFilms(proj2018_2019.ServiceReference2.Film F, proj2018_2019.ServiceReference2.Actor[] Actor, proj2018_2019.ServiceReference2.Category[] Category) {
            base.Channel.AddFilms(F, Actor, Category);
        }
        
        public System.Threading.Tasks.Task AddFilmsAsync(proj2018_2019.ServiceReference2.Film F, proj2018_2019.ServiceReference2.Actor[] Actor, proj2018_2019.ServiceReference2.Category[] Category) {
            return base.Channel.AddFilmsAsync(F, Actor, Category);
        }
        
        public void AddActors(proj2018_2019.ServiceReference2.Actor A, proj2018_2019.ServiceReference2.Film[] F) {
            base.Channel.AddActors(A, F);
        }
        
        public System.Threading.Tasks.Task AddActorsAsync(proj2018_2019.ServiceReference2.Actor A, proj2018_2019.ServiceReference2.Film[] F) {
            return base.Channel.AddActorsAsync(A, F);
        }
    }
}
